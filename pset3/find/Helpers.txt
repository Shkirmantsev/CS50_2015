/**
 * helpers.c
 *
 * Computer Science 50
 * Problem Set 3
 *
 * Helper functions for Problem Set 3.
 */
       
#include <cs50.h>

#include "helpers.h"

/**
 * Returns true if value is in array of n values, else false.
 */
bool search(int value, int values[], int n)
{
    // Finding needle
    int midpoint;
    int i=0;
    int j=n;
    while ((j-i)>0)
        {
            if ((j-i)%2==0) midpoint=((j-i)/2);
            else midpoint=((j-i-1)/2);
            if (values[midpoint]==value) return true;
            if (values[midpoint]<value) i+=midpoint;
            else j+=midpoint;    
        }
        return false;
    
    
    
}  

/**
 * Sorts array of n values.
 */
void sort(int values[], int n)
{
    // sorting array implement an O(n^2) sorting algorithm
    for (int i=0; i<(n-1);i++)
    {
        int min=i;
        for (int j=i+1; j< n;j++)
     {
            if (values[j]< values[min])
                {
                    min=j;
                    int tmp=values[i];
                    values[i]=values[j];
                    values[j]=tmp;
                    
                } 
            
        }
        
    }
    
    
}
